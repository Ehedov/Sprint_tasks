Sprint_4a_task


1) İstifadəçidən iki rəqəm və bir əməliyyat (toplama, çıxma, vurma, bölmə) daxil etməsini tələb edən funksiya yazın. Mümkün xətaları (ValueError, TypeError və s.) idarə edin və müvafiq mesajlar çıxarın. Sonda da "Hesablama bitdi" mesajı çap olunsun.

def hesapla():
    try:
        a = float(input("Birinci rəqəmi daxil edin: "))
        b = float(input("İkinci rəqəmi daxil edin: "))
        op = input("Əməliyyatı daxil edin (+, -, *, /): ")

        if op == "+":
            print("Nəticə:", a + b)
        elif op == "-":
            print("Nəticə:", a - b)
        elif op == "*":
            print("Nəticə:", a * b)
        elif op == "/":
            print("Nəticə:", a / b)
        else:
            print("Yanlış əməliyyat simvolu daxil etdiniz.")
    except ValueError:
        print("Zəhmət olmasa rəqəm daxil edin.")
    except ZeroDivisionError:
        print("0-a bölmək mümkün deyil.")
    except Exception as e:
        print("Xəta baş verdi:", e)
    finally:
        print("Hesablama bitdi")

hesapla()


2) 1-dən 50-yə qədər olan rəqəmlərdən yalnız 11ə qalıqsız bölünənlərini list olaraq qaytarın.

def bolunenler():
    return [i for i in range(1, 51) if i % 11 == 0]

print(bolunenler())

3) Verilmiş sözlər siyahısından (["kitab", "qələm", "defter", "silgi"]) hər sözün ilk hərfini list olaraq qaytarın.

def ilk_herfler():
    sozler = ["kitab", "qələm", "defter", "silgi"]
    return [soz[0] for soz in sozler]

print(ilk_herfler())

4) Şəhər adları (["Bakı", "Gəncə", "Sumqayıt"]) və kodları ([12, 22, 18]) siyahılarından {şəhər: kod} dictionary olaraq qaytarın.

def seher_kodlari():
    seherler = ["Bakı", "Gəncə", "Sumqayıt"]
    kodlar = [12, 22, 18]
    return dict(zip(seherler, kodlar))

print(seher_kodlari())

5) Kilometri milə çevirən (mil = km * 0.621371) lambda funksiyası yazın və 5 fərqli dəyər üçün yoxlayın.

km_to_mil = lambda km: km * 0.621371

dəyərlər = [1, 5, 10, 50, 100]
cavablar = list(map(km_to_mil, dəyərlər))

print(cavablar)

6) [100, 200, 300, 400] qiymətlərinə 18% vergi əlavə etmək üçün map() və lambda istifadə edin.

qiymetler = [100, 200, 300, 400]
vergi_ile = list(map(lambda x: x * 1.18, qiymetler))

print(vergi_ile)

7) [3, 7, 12] və [2, 4, 6] siyahılarının elementlərini ikiqat artırmaq və sonra cəmləmək üçün map() istifadə edin.

a = [3, 7, 12]
b = [2, 4, 6]

netice = list(map(lambda x, y: (x * 2) + (y * 2), a, b))

print(netice)

8) [150, 80, 220, 45] siyahısından ən kiçik qiyməti reduce() ilə tapın.

from functools import reduce

qiymetler = [150, 80, 220, 45]
en_kicik = reduce(lambda x, y: x if x < y else y, qiymetler)

print(en_kicik)
